; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs    = esp8266_usb, esp8266_ota, esp32_usb, esp32_ota
workspace_dir   = .pio.nosync

; Common settings for all environments
[env]
framework        = arduino
monitor_speed    = 115200
;build_src_filter = +<*> +<../examples/basicExample.cpp>
build_src_filter = +<*> +<../examples/extendedExample.cpp>
lib_deps         = 
    WiFiManager

; ESP8266 base configuration
[esp8266_common]
platform         = espressif8266
build_flags      = 
    -DESP8266
lib_deps         = 
    ${env.lib_deps}
    ESP8266mDNS
    me-no-dev/ESPAsyncTCP
    me-no-dev/ESPAsyncWebServer
    https://github.com/mrWheel/esp-networking.git

; ESP32 base configuration
[esp32_common]
platform         = espressif32
board_build.filesystem = littlefs
build_flags      = 
    -DESP32
    -DFILESYSTEM=LittleFS
lib_deps         = 
    ${env.lib_deps}
    me-no-dev/AsyncTCP
    me-no-dev/ESPAsyncWebServer
    https://github.com/mrWheel/esp-networking.git

; ESP8266 USB upload configuration
[env:esp8266_usb]
extends          = esp8266_common
board            = d1
monitor_filters  = 
    esp8266_exception_decoder

; ESP8266 OTA upload configuration
[env:esp8266_ota]
extends          = esp8266_common
board            = d1
upload_protocol  = espota
upload_port      = 192.168.12.140
monitor_filters  = 
    esp8266_exception_decoder


[env:esp32_usb]             ; ESP32 USB upload configuration
extends          = esp32_common
board            = esp32dev
monitor_filters  = 
    esp32_exception_decoder


[env:esp32_ota]             ; ESP32 OTA upload configuration
extends          = esp32_common
board            = esp32dev
upload_protocol  = espota
upload_port      = esp32.local
monitor_filters  = 
    esp32_exception_decoder
