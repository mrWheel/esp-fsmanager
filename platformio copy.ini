[platformio]
default_envs    = esp8266basic_usb;, esp8266basic_ota, esp32basic_usb, esp32basic_ota, esp8266extended_usb, esp8266extended_ota, esp32extended_usb, esp32extended_ota
workspace_dir   = .pio.nosync

[common]
monitor_speed    = 115200
build_src_filter = +<*> +<../examples/basicExample.cpp>

lib_deps  = 
    tzapu/WiFiManager
    https://github.com/mrWheel/esp-networking.git

[common_esp8266]                      ; NOT a build env
platform         = espressif8266
framework        = arduino
board            = d1
build_flags      = 
    -DESP8266
monitor_filters  = esp8266_exception_decoder
lib_deps         = 
    ${common.lib_deps}
    ESP8266mDNS
    ESP8266WebServer
    ESP8266HTTPUpdate

[common_esp32]                        ; NOT a build env
platform         = espressif32
board            = esp32dev
framework        = arduino
board_build.filesystem = littlefs
build_flags      = 
    -DESP32
    -DFILESYSTEM=LittleFS
monitor_filters  = esp32_exception_decoder
lib_deps         = 
    ${common.lib_deps}
    WebServer
    Update

[env:esp8266basic_usb]
build_src_filter = +<*> +<../examples/basicExample.cpp>
platform         = espressif8266
framework        = arduino
board            = d1
build_flags      = 
    -DESP8266
monitor_filters  = esp8266_exception_decoder
lib_deps         = 
    ${common.lib_deps}
    ESP8266mDNS
    ESP8266WebServer
    ESP8266HTTPUpdate

[env:esp8266basic_ota]
extends          = common_esp8266
upload_protocol  = espota
upload_port      = 192.168.12.140
build_src_filter = +<*> +<../examples/basicExample.cpp>

[env:esp32basic_usb]
extends          = common_esp32
build_src_filter = +<*> +<../examples/basicExample.cpp>

[env:esp32basic_ota]
extends          = common_esp32
upload_protocol  = espota
upload_port      = esp32.local
build_src_filter = +<../examples/basicExample.cpp>

[esp8266extended_common]
extends          = common_esp8266
lib_deps         = 
    ${common_esp8266.lib_deps}
;    FSmanager

[esp32extended_common]
extends          = common_esp32
lib_deps         = 
    ${common_esp32.lib_deps}
 ;   FSmanager

[env:esp8266extended_usb]
extends          = esp8266extended_common
build_src_filter = +<*> +<../examples/extendedExample.cpp>

[env:esp8266extended_ota]
extends          = esp8266extended_common
upload_protocol  = espota
upload_port      = 192.168.12.140
build_src_filter = +<*> +<../examples/extendedExample.cpp>

[env:esp32extended_usb]
extends          = esp32extended_common
build_src_filter = +<*> +<../examples/extendedExample.cpp>

[env:esp32extended_ota]
extends          = esp32extended_common
upload_protocol  = espota
upload_port      = esp32.local
build_src_filter = +<*> +<../examples/extendedExample.cpp>